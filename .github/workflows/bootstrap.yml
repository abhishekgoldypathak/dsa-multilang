name: Auto Boilerplate Setup

on:
  create:
    branches:
      - "course*"

jobs:
  create_boilerplate:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/course')
    steps:
      - name: Checkout the new branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: Extract branch name
        id: vars
        run: echo "branch_name=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Create boilerplate if missing
        run: |
          BASE_DIR="coursera/${{ env.branch_name }}"
          if [ ! -d "$BASE_DIR" ]; then
            echo "Creating boilerplate for $BASE_DIR..."
            mkdir -p $BASE_DIR/{c,cpp,golang,python}

            cat << 'EOF' > $BASE_DIR/c/main.c
#include <stdio.h>

int main() {
    printf("Hello, C from ${{ env.branch_name }}!\\n");
    return 0;
}
EOF

            cat << 'EOF' > $BASE_DIR/c/Makefile
all: main
main: main.c
\tgcc main.c -o main
clean:
\trm -f main
EOF

            cat << 'EOF' > $BASE_DIR/cpp/CMakeLists.txt
cmake_minimum_required(VERSION 3.10)
project(DSA_CPP)
set(CMAKE_CXX_STANDARD 17)
add_executable(main main.cpp)
EOF

            echo '#include <iostream>\nint main(){std::cout << "Hello, C++ from ${{ env.branch_name }}!\\n";}' > $BASE_DIR/cpp/main.cpp

            cat << 'EOF' > $BASE_DIR/golang/main.go
package main
import "fmt"
func main() { fmt.Println("Hello, Go from ${{ env.branch_name }}!") }
EOF

            cat << 'EOF' > $BASE_DIR/python/main.py
def main():
    print("Hello, Python from ${{ env.branch_name }}!")

if __name__ == "__main__":
    main()
EOF
          else
            echo "Boilerplate already exists. Skipping."
          fi

      - name: Commit and push boilerplate
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          if [ -n "$(git status --porcelain coursera/${{ env.branch_name }})" ]; then
            git add coursera/${{ env.branch_name }}
            git commit -m "Auto-generate boilerplate for ${{ env.branch_name }}"
            git push origin ${{ env.branch_name }}
          else
            echo "No new files to commit."
          fi
